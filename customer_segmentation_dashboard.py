# -*- coding: utf-8 -*-
"""customer_segmentation_dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BYYOb7Qr_TKTEhqkbBQ0oE2eBGhjKCxV
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

st.set_page_config(page_title="Customer Segmentation", layout="wide")
st.title("ðŸ§  Customer Segmentation Dashboard (KM_AE)")

@st.cache_data
def load_data():
    rfm_df = pd.read_csv("rfm_with_km_ae.csv")
    tsne_df = pd.read_csv("tsne_with_km_ae.csv")
    return rfm_df, tsne_df

rfm_df, tsne_df = load_data()

st.sidebar.title("ðŸ“‚ Navigation")
section = st.sidebar.radio("Go to section:", [
    "Overview",
    "Cluster Distribution",
    "RFM Boxplots",
    "Cluster Profiles",
    "t-SNE Visualization"
])

if section == "Overview":
    st.subheader("ðŸ“Œ Model Summary")
    st.markdown("""
    - Clustering method: **KMeans** on **AutoEncoder-encoded RFM**
    - Validated via **ANOVA** and **Tukey HSD**
    - Optimized for silhouette score and monetary separation
    """)

elif section == "Cluster Distribution":
    st.subheader("ðŸ§® Cluster Distribution")
    cluster_counts = rfm_df['KM_AE'].value_counts().sort_index()
    st.bar_chart(cluster_counts)

elif section == "RFM Boxplots":
    st.subheader("ðŸ“¦ RFM Value Distribution per Cluster")
    for feature in ['Recency', 'Frequency', 'Monetary']:
        fig, ax = plt.subplots()
        sns.boxplot(data=rfm_df, x='KM_AE', y=feature, palette='Set2', ax=ax)
        ax.set_title(f"{feature} by Cluster")
        st.pyplot(fig)

elif section == "Cluster Profiles":
    st.subheader("ðŸ“Š Average RFM per Cluster")
    cluster_avg = rfm_df.groupby('KM_AE')[['Recency', 'Frequency', 'Monetary']].mean().round(2)
    st.dataframe(cluster_avg)

    st.markdown("### ðŸ”¥ Heatmap of Cluster Profiles")
    fig, ax = plt.subplots()
    sns.heatmap(cluster_avg, annot=True, fmt=".1f", cmap="YlGnBu", ax=ax)
    st.pyplot(fig)

elif section == "t-SNE Visualization":
    st.subheader("ðŸ§¬ t-SNE Clustering View")
    fig, ax = plt.subplots()
    sns.scatterplot(data=tsne_df, x='TSNE1', y='TSNE2', hue='KM_AE', palette='tab10', s=60, ax=ax)
    ax.set_title("t-SNE Projection with KM_AE Labels")
    ax.legend(title='Cluster', bbox_to_anchor=(1.05, 1), loc='upper left')
    st.pyplot(fig)
